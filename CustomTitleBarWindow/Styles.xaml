<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="TitleBarBackground" Color="AliceBlue" />
    <SolidColorBrush x:Key="TitleBarForeGround" Color="DarkBlue" />
    <SolidColorBrush x:Key="BorderColor" Color="SteelBlue" />

    <!--Title Bar Buttons-->
    <Style TargetType="Button" x:Key="TitleBarButtonStyle">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border	x:Name="ButtonContentBorder"
					        Background="Transparent"
					        BorderThickness="0"
					        SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
						                  Margin="0"
						                  HorizontalAlignment="Center"
						                  VerticalAlignment="Center"
						                  Focusable="False"
						                  RecognizesAccessKey="True" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonContentBorder" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonContentBorder" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Close Title Bar Button-->
    <Style TargetType="Button" x:Key="TitleBarCloseButtonStyle">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="ButtonContentBorder"
					        Background="Transparent"
					        BorderThickness="0"
					        SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
						                  Margin="0"
						                  HorizontalAlignment="Center"
						                  VerticalAlignment="Center"
						                  Focusable="False"
						                  RecognizesAccessKey="True" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonContentBorder" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonContentBorder" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Window Border-->
    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <!--<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>